###############################################################################
# File: a06q02
# Author: aoro        
###############################################################################
#       Text Segment
###############################################################################
        
        .text
        .globl main

###############################################################################
#       Function for printing integers
###############################################################################
print_int:
        li      $v0, 1
        syscall
        jr      $ra
###############################################################################

        
###############################################################################
#       Function for printing strings
############################################################################### 
print_str:
        li      $v0, 4
        syscall

        jr      $ra
###############################################################################


###############################################################################
#       Function for passfail
###############################################################################
passfail:
        beq     $a0, 0, fail_case       # if the input is 0, then FAIL
        la      $a0, PASS       # Else, pass the test
        li      $v0, 4
        syscall
        li      $v0, 1
        j       exit_passfail

fail_case:
        la      $a0, FAIL
        li      $v0, 4
        syscall
        li      $v0, 0

exit_passfail:
        jr      $ra
###############################################################################


###############################################################################
#       MAIN FUNCTION
###############################################################################
main:
        la      $t1, arr        # array for the test inputs
        li      $t2, 16
        add     $t2, $t2, $t1
LOOP:
        beq     $t1, $t2, exit_LOOP     # check for exiting loop
        lw      $a0, 0($t1)
        jal     print_int

        la      $a0, SPACE      
        jal     print_str

        lw      $a0, 0($t1)
        jal     passfail        # check for passfail function
        move    $t0, $v0

        la      $a0, SPACE
        jal     print_str

        move    $a0, $t0
        jal     print_int

        la      $a0, NEWLINE
        jal     print_str

        addiu   $t1, $t1, 4
        j       LOOP

exit_LOOP:
        li      $v0, 10
        syscall
###############################################################################
        

###############################################################################
#       Data Segment
###############################################################################
        .data

NEWLINE:
        .asciiz "\n"

SPACE:
        .asciiz " "
        
FAIL:
        .asciiz "FAIL"
        
PASS:
        .asciiz "pass"

arr:
        .word 5 -3 42 0
